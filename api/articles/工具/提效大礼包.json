{"title":"提效大礼包","uid":"54834ecc59dd7f27dd6659dff94113cd","slug":"工具/提效大礼包","date":"2021-06-02T10:32:47.000Z","updated":"2022-01-02T16:47:54.098Z","comments":true,"path":"api/articles/工具/提效大礼包.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/jp-polnareff/image-hosting@master/20210423/image.4aewe4zpwds0.png","content":"<h1 id=\"The-Key-Promoter-X\"><a href=\"#The-Key-Promoter-X\" class=\"headerlink\" title=\"The Key Promoter X\"></a><a href=\"https://github.com/halirutan/IntelliJ-Key-Promoter-X\">The Key Promoter X</a></h1><p><strong>学习快捷键利器，丢掉鼠标指日可待</strong></p>\n<ol>\n<li>每次单击按钮/命令/菜单项上使用鼠标/ …它会显示一个弹出窗口，显示该操作的键盘快捷键。</li>\n<li>记录您没有使用键盘快捷键的统计数据，因此您知道它是值得学习的哪个捷径。</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/jp-polnareff/image-hosting@master/20210423/image.6bxt4o45ubk0.png\" alt=\"img\"></p>\n<h1 id=\"Camel-Case-Plugin\"><a href=\"#Camel-Case-Plugin\" class=\"headerlink\" title=\"Camel Case Plugin\"></a><a href=\"https://github.com/netnexus/camelcaseplugin\">Camel Case Plugin</a></h1><p>你还在为驼峰转下划线之类的问题苦恼嘛？</p>\n<p><img src=\"https://raw.githubusercontent.com/netnexus/camelcaseplugin/assets/example.gif\" alt=\"Demonstration\"></p>\n<h1 id=\"Free-Idea-Mybatis\"><a href=\"#Free-Idea-Mybatis\" class=\"headerlink\" title=\"Free-Idea-Mybatis\"></a><a href=\"https://github.com/rockjava/intellij-mybatis-plugin\">Free-Idea-Mybatis</a></h1><p>free-idea-mybatis是一款增强idea对mybatis支持的插件，主要功能如下： </p>\n<ol>\n<li>生成mapper xml文件</li>\n<li>快速从代码跳转到mapper及从mapper返回代码</li>\n<li>mybatis自动补全及语法错误提示</li>\n<li>集成mybatis generator gui界面</li>\n</ol>\n<h1 id=\"IDEA的-Live-Template\"><a href=\"#IDEA的-Live-Template\" class=\"headerlink\" title=\"IDEA的 Live Template\"></a>IDEA的 Live Template</h1><p>模版用得好摸鱼时间多一半</p>\n<p>推荐：</p>\n<p><a href=\"https://juejin.cn/post/6844903873899937806\">编程小技巧之IDEA的Live Template</a></p>\n<h1 id=\"Lombok\"><a href=\"#Lombok\" class=\"headerlink\" title=\"Lombok\"></a><a href=\"https://github.com/mplushnikov/lombok-intellij-plugin\">Lombok</a></h1><table>\n<thead>\n<tr>\n<th align=\"center\">注解</th>\n<th align=\"center\">作用范围</th>\n<th align=\"center\">作用描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">@Data</td>\n<td align=\"center\">类</td>\n<td align=\"center\">提供类所有属性的 get 、 set 、equals、canEqual、hashCode、toString 方法</td>\n</tr>\n<tr>\n<td align=\"center\">@Setter&amp;@Getter</td>\n<td align=\"center\">属性或类</td>\n<td align=\"center\">提供 get 、set方法</td>\n</tr>\n<tr>\n<td align=\"center\">@Log4j</td>\n<td align=\"center\">类</td>\n<td align=\"center\">为类提供一个 属性名为 log 的 log4j 日志对象，提供默认构造方法。</td>\n</tr>\n<tr>\n<td align=\"center\">@AllArgsConstructor</td>\n<td align=\"center\">类</td>\n<td align=\"center\">为类提供一个全参的构造方法，加了这个注解后，类中不提供默认构造方法了。</td>\n</tr>\n<tr>\n<td align=\"center\">@NoArgsConstructor</td>\n<td align=\"center\">类</td>\n<td align=\"center\">为类提供一个无参的构造方法。</td>\n</tr>\n<tr>\n<td align=\"center\">@EqualsAndHashCode</td>\n<td align=\"center\">类</td>\n<td align=\"center\">可以生成 equals、canEqual、hashCode 方法。</td>\n</tr>\n<tr>\n<td align=\"center\">@NonNull</td>\n<td align=\"center\">属性</td>\n<td align=\"center\">会自动产生一个关于此参数的非空检查，如果参数为空，则抛出一个空指针异常</td>\n</tr>\n<tr>\n<td align=\"center\">@Cleanup</td>\n<td align=\"center\">变量前</td>\n<td align=\"center\">保证变量的资源会被自动关闭，默认是调用资源的 close() 方法，可使用 @Cleanup(“methodName”) 来指定要调用的方法</td>\n</tr>\n<tr>\n<td align=\"center\">@ToString</td>\n<td align=\"center\">类</td>\n<td align=\"center\">生成所有参数的 toString 方法</td>\n</tr>\n<tr>\n<td align=\"center\">@Value</td>\n<td align=\"center\">类</td>\n<td align=\"center\">生成含所有参数的构造方法，get 方法，此外还提供了equals、hashCode、toString 方法</td>\n</tr>\n<tr>\n<td align=\"center\">@SneakyThrows</td>\n<td align=\"center\">方法</td>\n<td align=\"center\">生产try-catch包裹方法，@SneakyThrows(Exception.class) 的形式指定抛出哪种异常</td>\n</tr>\n</tbody></table>\n<h1 id=\"GsonFormat\"><a href=\"#GsonFormat\" class=\"headerlink\" title=\"GsonFormat\"></a><a href=\"https://github.com/zzz40500/GsonFormat\">GsonFormat</a></h1><p>这是一个根据JSONObject格式的字符串,自动生成实体类</p>\n<p><img src=\"https://camo.githubusercontent.com/96c15a98acd99cdbcb52b0994d1156ee25850c1558a38c27084e329e549796c7/687474703a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f3136363836362d666639646333333661663732643764372e6769663f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970\" alt=\"gsonFormat.gif\"></p>\n<h1 id=\"Codota：代码智能提示\"><a href=\"#Codota：代码智能提示\" class=\"headerlink\" title=\"Codota：代码智能提示\"></a><a href=\"https://www.codota.com/\">Codota：代码智能提示</a></h1><p>Go to <strong>Plugins</strong>/<strong>Marketplace</strong> tab, Search “<strong>Tabnine</strong>“ and click <strong>Install</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/jp-polnareff/image-hosting@master/20210423/image.6bxt4o45ubk0.png\" alt=\"img\"></p>\n<h1 id=\"TODO\"><a href=\"#TODO\" class=\"headerlink\" title=\"TODO\"></a>TODO</h1>","feature":null,"text":"The Key Promoter X学习快捷键利器，丢掉鼠标指日可待 每次单击按钮/命令/菜单项上使用鼠标/ …它会显示一个弹出窗口，显示该操作的键盘快捷键。 记录您没有使用键盘快捷键的统计数据，因此您知道它是值得学习的哪个捷径。 Camel Case Plugin你还在为驼峰转...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"教程","slug":"教程","count":4,"path":"api/categories/教程.json"}],"tags":[{"name":"tools","slug":"tools","count":2,"path":"api/tags/tools.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#The-Key-Promoter-X\"><span class=\"toc-text\">The Key Promoter X</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Camel-Case-Plugin\"><span class=\"toc-text\">Camel Case Plugin</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Free-Idea-Mybatis\"><span class=\"toc-text\">Free-Idea-Mybatis</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#IDEA%E7%9A%84-Live-Template\"><span class=\"toc-text\">IDEA的 Live Template</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Lombok\"><span class=\"toc-text\">Lombok</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#GsonFormat\"><span class=\"toc-text\">GsonFormat</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Codota%EF%BC%9A%E4%BB%A3%E7%A0%81%E6%99%BA%E8%83%BD%E6%8F%90%E7%A4%BA\"><span class=\"toc-text\">Codota：代码智能提示</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#TODO\"><span class=\"toc-text\">TODO</span></a></li></ol>","author":{"name":"Polnareff","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/jp-polnareff/image-hosting@master/20210423/image123.47oj8cvm3fu0.jpg","link":"/","description":"Travel around in search of her sister's killer","socials":{"github":"https://github.com/jp-polnareff","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":""}},"mapped":true,"prev_post":{"title":"代码量统计工具-GitStats","uid":"7a07eb5d59a9e9ff4655ee40e094d0bf","slug":"工具/代码量统计","date":"2021-06-02T10:32:47.000Z","updated":"2022-01-02T16:47:54.097Z","comments":true,"path":"api/articles/工具/代码量统计.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/jp-polnareff/image-hosting@master/20210423/image.4t81bmup1sa0.png","text":"GitStatsGit历史统计生成数据表： 一般统计：总文件，行，提交，作者。 活动：按小时，周，年，等。 作者：作者列表（名称，提交（％），首次提交日期，最后提交日期，年龄，年份，年度作者。 文件：文件计数到日期，扩展 行：代码线按日期 1.克隆项目 git clone git...","link":"","photos":[],"count_time":{"symbolsCount":570,"symbolsTime":"1 mins."},"categories":[{"name":"工具","slug":"工具","count":2,"path":"api/categories/工具.json"}],"tags":[{"name":"tools","slug":"tools","count":2,"path":"api/tags/tools.json"}],"author":{"name":"Polnareff","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/jp-polnareff/image-hosting@master/20210423/image123.47oj8cvm3fu0.jpg","link":"/","description":"Travel around in search of her sister's killer","socials":{"github":"https://github.com/jp-polnareff","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":""}}},"next_post":{"title":"GraphQL初探","uid":"265980696829f8e89187dcd1752370ec","slug":"network/graphql初探","date":"2021-05-16T10:32:47.000Z","updated":"2022-01-02T16:47:54.085Z","comments":true,"path":"api/articles/network/graphql初探.json","keywords":null,"cover":null,"text":"简介A query language for your API API的查询语言，是用于使用现有数据来完成这些查询的运行时。GraphQL为您的API中的数据提供了完整且易于理解的描述，使客户能够准确地询问他们需要什么。 ","link":"","photos":[],"count_time":{"symbolsCount":111,"symbolsTime":"1 mins."},"categories":[{"name":"学习记录","slug":"学习记录","count":14,"path":"api/categories/学习记录.json"}],"tags":[{"name":"GraphQL","slug":"GraphQL","count":1,"path":"api/tags/GraphQL.json"}],"author":{"name":"Polnareff","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/jp-polnareff/image-hosting@master/20210423/image123.47oj8cvm3fu0.jpg","link":"/","description":"Travel around in search of her sister's killer","socials":{"github":"https://github.com/jp-polnareff","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":""}}}}